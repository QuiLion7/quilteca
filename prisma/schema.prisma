// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  items Item[]
  // lists List[]
}

model VerificationToken {
  identifier String   @id @default(auto()) @map("_id") @db.ObjectId
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Item {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  knowledge String
  componentCurricular String
  subject           String
  specificSubject String
  author            String    
  year              Int
  bNCCCompetence    String
  bNCCHability      String
  difficultyLevel   String
  baseText          String?   
  resource          String?   
  itemCommand         String
  alternatives      Json
  createdAt DateTime? @default(now())
  updateAt DateTime? @default(now())

  userId  String @db.ObjectId
  user    User     @relation(fields: [userId], references: [id])

  // listId          String   @db.ObjectId
  // list            List     @relation(fields: [listId], references: [id])

}

// model List {
//   id        String    @id @default(auto()) @map("_id") @db.ObjectId
//   name      String

//   userId    String    @db.ObjectId
//   user      User      @relation(fields: [userId], references: [id])

//   items Item[]
// }
